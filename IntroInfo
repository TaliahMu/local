def Function(key,sample=100,field=1):
    animal_id = str((experiment.Scan() & key).fetch1('animal_id'))
    session = str((experiment.Scan() & key).fetch1('session'))
    scan_idx = str((experiment.Scan() & key).fetch1('scan_idx'))
    import glob
    scan_filename = (experiment.Scan() & key).local_filenames_as_wildcard
    nfiles = len(glob.glob(scan_filename))
    print('Scan {}-{}-{} has {} file(s).'.format(animal_id,session,scan_idx,nfiles))
    import os
    diff = []
    for i in range(nfiles):
        x = i+1
        filename = scan_filename[:-5] + '_{}.tif'.format("%05d" % (x,))
        y = round((os.path.getsize(filename) / 1000000),1)
        scan = scanreader.read_scan(filename)
        if i == 0:
            size = [y]
            nframes = scan.num_frames
        elif y not in size:
            diff.append(y)
            z = scan.num_frames
            print('File {} is {} MB and has {} frames.'.format(x,y,z))
    if len(diff) != 0:
        print ('All other files are {} MB and have {} frames.'.format(size[0], nframes))
    elif len(diff) == 0:
        print ('All files are {} MB and have {} frames.'.format(size[0], nframes))
    avg = 1 ###DISPLAYS AVERAGING?????#find out what the averaging was set to
    print('Averaging {} frame(s).'.format(avg))
    scan = scanreader.read_scan(scan_filename)
    nframes = scan.num_frames
    stepsize = int(nframes/sample)
    ch1 = scan[(field-1),:,:,0,0:nframes:stepsize].mean(axis=-1)
    green = ch1/(np.max(ch1)*.8)
    if scan.num_channels == 2:
        ch2 = scan[(field-1),:,:,1,0:nframes:stepsize].mean(axis=-1)
        red = ch2 / (np.max(ch2)*.2)
    else:
        red = np.zeros(np.shape(ch1))
    blue = np.zeros(np.shape(ch1))
    image = np.stack([red,green,blue],-1)
    plt.imshow(image)
    plt.axis('off')
